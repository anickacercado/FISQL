options {
IGNORE_CASE = true;
STATIC = false;
    OUTPUTOKEN_DIRECTORY="C://Users//anick//Documents//NetBeansProjects//[Compi2]Proyecto1_201212859//FISQL//src//paquetes//";
}

PARSER_BEGIN(paquete)
package paquetes;
import  archivos.memoria;


public class paquete {
  public static void main(String args[]) throws ParseException {
    paquete parser = new paquete(System.in);
  }
}
PARSER_END(paquete)

TOKEN:
{   
     <COR_ABRE:"[">{System.out.println(image);}
    |<COR_CIERRA:"]">{System.out.println(image);}
    |<COMA:",">{System.out.println(image);}
    |<DOSPUNTOS:":">{System.out.println(image);}
    |<TOKEN_VALIDAR:"\""("validar")"\""> {System.out.println(image);}
    |<TOKEN_PAQUETE:"\""("paquete")"\""> {System.out.println(image);}
    |<TOKEN_LOGIN:"\""("login")"\""> {System.out.println(image);}
    |<TOKEN_COMANDO:"\""("comando")"\""> {System.out.println(image);}
    |<TOKEN_INSTRUCCION:"\""("instruccion")"\""> {System.out.println(image);}
    |<TOKEN_FIN:"\""("fin")"\""> {System.out.println(image);}
    |<TOKEN_USQL:"\""("usql")"\""> {System.out.println(image);}
    |<TOKEN_REPORTE:"\""("reporte")"\""> {System.out.println(image);}
    |<TOKEN_USR:"\""("usr")"\""> {System.out.println(image);}
    |<TOKEN_PASS:"\""("pass")"\""> {System.out.println(image);}
    
    |<CODIGO:"\u007e" (~["\u007e"])* "\u007e"> {System.out.println(image);}
    |<CADENA:"\"" (~["\""])*"\""> {System.out.println(image);}
    |<ENTERO: (["0"-"9"])+ > {System.out.println(image);}

 
}

SKIP: 
{
  " "
| "\n"
| "\r"
| "\t"
}

void S():
{}
{
    E()
}

void E():
{}
{
   <COR_ABRE> <TOKEN_VALIDAR> <DOSPUNTOS> <CADENA> <COMA> (VALIDAR()|PAQUETE())
    <COR_CIERRA>
}

void VALIDAR():
{
String usr, pass;
Token u, p; 
}
{
   
  <TOKEN_LOGIN> <DOSPUNTOS> 
    <COR_ABRE>
        <TOKEN_USR> <DOSPUNTOS>  u=<CADENA> <COMA>
        <TOKEN_PASS> <DOSPUNTOS> p=<CADENA>
    <COR_CIERRA>
    {
    memoria.paquetePly="LOGIN";
    usr = u.image;
    usr = usr.substring(1, usr.length()-1);
    memoria.usrPly= usr;

    pass = p.image;
    pass = pass.substring(1, pass.length()-1);
    memoria.passPly= pass;
    }
}

void PAQUETE():
{Token t;
String cod;}
{
  <TOKEN_PAQUETE><DOSPUNTOS>(<TOKEN_FIN>
    {memoria.paquetePly="FIN";}|

    ((<TOKEN_USQL> {memoria.paquetePly="USQL";}|<TOKEN_REPORTE>{memoria.paquetePly="REPORTE";})<COMA>
     <TOKEN_INSTRUCCION><DOSPUNTOS>t=<CODIGO> {
                                                cod = t.image;
                                                cod = cod.substring(1, cod.length()-1);
                                                memoria.codigoPly = cod; 
                                              }
    )
  )
}

